# bot/src/handlers/profile.py
from datetime import datetime
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from ..db import get_user_profile, update_user_onboarding
from ..keyboards import main_patient_kb

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è pool (–±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤ main.py)
pool = None

class ProfileStates(StatesGroup):
    choosing_field = State()
    editing_height_weight = State()
    editing_phase = State()
    editing_restrictions = State()

async def show_profile(message: Message, db_pool):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    global pool
    if pool is None:
        pool = db_pool

    profile = await get_user_profile(pool, message.from_user.id)

    if not profile:
        await message.answer("‚ùå –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return

    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –æ–ø–µ—Ä–∞—Ü–∏–∏
    surgery_date = profile.get('surgery_date')
    surgery_str = surgery_date.strftime('%d.%m.%Y') if surgery_date else '–ù–µ —É–∫–∞–∑–∞–Ω–∞'

    # –°—Ç–∞—Ç—É—Å –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏ –ø—Ä–æ—Ñ–∏–ª—è
    completed_fields = 0
    total_fields = 6

    fields_status = {
        'full_name': profile.get('full_name'),
        'surgery_date': profile.get('surgery_date'),
        'height_cm': profile.get('height_cm'),
        'weight_kg': profile.get('weight_kg'),
        'current_phase': profile.get('current_phase'),
        'doctor_code': profile.get('doctor_code')
    }

    for field, value in fields_status.items():
        if value:
            completed_fields += 1

    completeness = int((completed_fields / total_fields) * 100)

    # –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
    progress_bar = "üü©" * (completeness // 20) + "‚¨ú" * (5 - completeness // 20)

    profile_text = f"""
üë§ **–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å**

üìä **–ó–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å:** {completeness}% {progress_bar}

üìù **–õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:**
‚Ä¢ –ò–º—è: {profile.get('full_name', '‚ùå –ù–µ —É–∫–∞–∑–∞–Ω–æ')}
‚Ä¢ –î–∞—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏: {surgery_str}
‚Ä¢ –ö–æ–¥ –≤—Ä–∞—á–∞: {profile.get('doctor_code', '‚ùå –ù–µ —É–∫–∞–∑–∞–Ω')}

üìè **–§–∏–∑–∏—á–µ—Å–∫–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:**
‚Ä¢ –†–æ—Å—Ç: {profile.get('height_cm', '‚ùå –ù–µ —É–∫–∞–∑–∞–Ω')} {'—Å–º' if profile.get('height_cm') else ''}
‚Ä¢ –í–µ—Å: {profile.get('weight_kg', '‚ùå –ù–µ —É–∫–∞–∑–∞–Ω')} {'–∫–≥' if profile.get('weight_kg') else ''}

üçΩÔ∏è **–ü–∏—Ç–∞–Ω–∏–µ:**
‚Ä¢ –¢–µ–∫—É—â–∞—è —Ñ–∞–∑–∞: {profile.get('current_phase', '‚ùå –ù–µ —É–∫–∞–∑–∞–Ω–∞')}
‚Ä¢ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è: {profile.get('dietary_restrictions', '–ù–µ —É–∫–∞–∑–∞–Ω—ã')}

üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**
‚Ä¢ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {profile.get('created_at').strftime('%d.%m.%Y')}
‚Ä¢ –û–Ω–±–æ—Ä–¥–∏–Ω–≥: {'‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω' if profile.get('onboarding_completed') else '‚è≥ –í –ø—Ä–æ—Ü–µ—Å—Å–µ'}

‚úèÔ∏è **–î–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–ø–∏—à–∏—Ç–µ:** `—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å`
"""

    await message.answer(profile_text)

async def handle_profile_edit(message: Message):
    """–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –ø—Ä–æ—Ñ–∏–ª—è"""
    await message.answer(
        "‚úèÔ∏è **–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è**\n\n"
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:\n\n"
        "üìÖ **–î–∞—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏:**\n"
        "`–¥–∞—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏: –î–î.–ú–ú.–ì–ì–ì–ì`\n"
        "–ü—Ä–∏–º–µ—Ä: `–¥–∞—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏: 15.06.2024`\n\n"
        "üìè **–†–æ—Å—Ç –∏ –≤–µ—Å:**\n"
        "`—Ä–æ—Å—Ç –≤–µ—Å: —Ä–æ—Å—Ç,–≤–µ—Å`\n"
        "–ü—Ä–∏–º–µ—Ä: `—Ä–æ—Å—Ç –≤–µ—Å: 170,75.5`\n\n"
        "üçΩÔ∏è **–§–∞–∑–∞ –ø–∏—Ç–∞–Ω–∏—è:**\n"
        "`—Ñ–∞–∑–∞: –Ω–æ–º–µ—Ä`\n"
        "–ü—Ä–∏–º–µ—Ä: `—Ñ–∞–∑–∞: 3`\n"
        "(1-–∂–∏–¥–∫–∞—è, 2-–ø—é—Ä–µ, 3-–º—è–≥–∫–∞—è, 4-–æ–±—ã—á–Ω–∞—è)\n\n"
        "üö´ **–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:**\n"
        "`–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è: —Ç–µ–∫—Å—Ç`\n"
        "–ü—Ä–∏–º–µ—Ä: `–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è: –Ω–µ–ø–µ—Ä–µ–Ω–æ—Å–∏–º–æ—Å—Ç—å –ª–∞–∫—Ç–æ–∑—ã`\n\n"
        "–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —á–∞—Ç!"
    )

async def handle_simple_profile_updates(message: Message, db_pool):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è"""
    global pool
    if pool is None:
        pool = db_pool

    text = message.text.lower().strip()

    try:
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞—Ç—ã –æ–ø–µ—Ä–∞—Ü–∏–∏
        if text.startswith('–¥–∞—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏:'):
            date_str = text.split(':', 1)[1].strip()
            surgery_date = datetime.strptime(date_str, "%d.%m.%Y").date()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –¥–∞—Ç–∞ –Ω–µ –≤ –±—É–¥—É—â–µ–º
            if surgery_date > datetime.now().date():
                await message.answer("‚ùå –î–∞—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –±—É–¥—É—â–µ–º")
                return True
                
            await update_user_onboarding(pool, message.from_user.id, surgery_date=surgery_date)
            await message.answer(f"‚úÖ –î–∞—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∞: {surgery_date.strftime('%d.%m.%Y')}")
            return True

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–æ—Å—Ç–∞ –∏ –≤–µ—Å–∞
        elif text.startswith('—Ä–æ—Å—Ç –≤–µ—Å:'):
            values = text.split(':', 1)[1].strip()
            parts = values.replace(' ', '').split(',')
            if len(parts) == 2:
                height = int(parts[0])
                weight = float(parts[1])
                if 100 <= height <= 250 and 30 <= weight <= 300:
                    await update_user_onboarding(
                        pool, message.from_user.id,
                        height_cm=height, weight_kg=weight
                    )
                    await message.answer(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: —Ä–æ—Å—Ç {height} —Å–º, –≤–µ—Å {weight} –∫–≥")
                    return True
                else:
                    raise ValueError("–ù–µ–≤–µ—Ä–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è")
            else:
                raise ValueError("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç")

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–∑—ã
        elif text.startswith('—Ñ–∞–∑–∞:'):
            phase_num = text.split(':', 1)[1].strip()
            phases = {"1": "–∂–∏–¥–∫–∞—è", "2": "–ø—é—Ä–µ", "3": "–º—è–≥–∫–∞—è", "4": "–æ–±—ã—á–Ω–∞—è"}
            if phase_num in phases:
                phase = phases[phase_num]
                await update_user_onboarding(pool, message.from_user.id, current_phase=phase)
                await message.answer(f"‚úÖ –§–∞–∑–∞ –ø–∏—Ç–∞–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞: {phase}")
                return True
            else:
                raise ValueError("–ù–µ–≤–µ—Ä–Ω–∞—è —Ñ–∞–∑–∞")

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
        elif text.startswith('–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:'):
            restrictions = text.split(':', 1)[1].strip()
            restrictions = restrictions if restrictions.lower() != '–Ω–µ—Ç' else None
            await update_user_onboarding(pool, message.from_user.id, dietary_restrictions=restrictions)
            restrictions_text = restrictions if restrictions else "–æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"
            await message.answer(f"‚úÖ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω—ã: {restrictions_text}")
            return True

        return False

    except (ValueError, IndexError) as e:
        await message.answer(
            "‚ùå –û—à–∏–±–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –∫–æ–º–∞–Ω–¥—ã.\n\n"
            "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã:\n"
            "‚Ä¢ `–¥–∞—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏: –î–î.–ú–ú.–ì–ì–ì–ì`\n"
            "‚Ä¢ `—Ä–æ—Å—Ç –≤–µ—Å: 170,75.5`\n"
            "‚Ä¢ `—Ñ–∞–∑–∞: 1-4`\n"
            "‚Ä¢ `–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è: —Ç–µ–∫—Å—Ç –∏–ª–∏ –Ω–µ—Ç`"
        )
        return True

async def start_profile_editing(message: Message, state: FSMContext):
    """–ù–∞—á–∞—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è —á–µ—Ä–µ–∑ FSM"""
    await message.answer(
        "‚úèÔ∏è **–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è**\n\n"
        "–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?\n\n"
        "1Ô∏è‚É£ –†–æ—Å—Ç –∏ –≤–µ—Å\n"
        "2Ô∏è‚É£ –¢–µ–∫—É—â–∞—è —Ñ–∞–∑–∞ –ø–∏—Ç–∞–Ω–∏—è\n"
        "3Ô∏è‚É£ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –≤ –ø–∏—Ç–∞–Ω–∏–∏\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-3) –∏–ª–∏ '–æ—Ç–º–µ–Ω–∞':"
    )
    await state.set_state(ProfileStates.choosing_field)

async def process_field_choice(message: Message, state: FSMContext, db_pool):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø–æ–ª—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    global pool
    if pool is None:
        pool = db_pool

    choice = message.text.strip()

    if choice.lower() in ['–æ—Ç–º–µ–Ω–∞', '–Ω–∞–∑–∞–¥']:
        await message.answer("‚ùå –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ", reply_markup=main_patient_kb)
        await state.clear()
        return

    if choice == "1":
        await message.answer(
            "üìè **–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–æ—Å—Ç–∞ –∏ –≤–µ—Å–∞**\n\n"
            "–í–≤–µ–¥–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: —Ä–æ—Å—Ç,–≤–µ—Å\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä: 170,85.5"
        )
        await state.set_state(ProfileStates.editing_height_weight)

    elif choice == "2":
        await message.answer(
            "üçΩÔ∏è **–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ñ–∞–∑—ã –ø–∏—Ç–∞–Ω–∏—è**\n\n"
            "–ù–∞ –∫–∞–∫–æ–π —Ñ–∞–∑–µ –≤—ã —Å–µ–π—á–∞—Å?\n\n"
            "1Ô∏è‚É£ –ñ–∏–¥–∫–∞—è (–ø–µ—Ä–≤—ã–µ 1-2 –Ω–µ–¥–µ–ª–∏)\n"
            "2Ô∏è‚É£ –ü—é—Ä–µ (2-4 –Ω–µ–¥–µ–ª–∏)\n"
            "3Ô∏è‚É£ –ú—è–≥–∫–∞—è (4-8 –Ω–µ–¥–µ–ª—å)\n"
            "4Ô∏è‚É£ –û–±—ã—á–Ω–∞—è (–ø–æ—Å–ª–µ 8 –Ω–µ–¥–µ–ª—å)\n\n"
            "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-4):"
        )
        await state.set_state(ProfileStates.editing_phase)

    elif choice == "3":
        await message.answer(
            "üö´ **–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –≤ –ø–∏—Ç–∞–Ω–∏–∏**\n\n"
            "–£–∫–∞–∂–∏—Ç–µ –≤–∞—à–∏ –ø–∏—â–µ–≤—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∏–ª–∏ –∞–ª–ª–µ—Ä–≥–∏–∏.\n"
            "–ï—Å–ª–∏ –Ω–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π, –Ω–∞–ø–∏—à–∏—Ç–µ '–Ω–µ—Ç':"
        )
        await state.set_state(ProfileStates.editing_restrictions)

    else:
        await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –æ—Ç 1 –¥–æ 3 –∏–ª–∏ '–æ—Ç–º–µ–Ω–∞'")

async def update_height_weight(message: Message, state: FSMContext, db_pool):
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–æ—Å—Ç–∞ –∏ –≤–µ—Å–∞"""
    global pool
    if pool is None:
        pool = db_pool

    try:
        parts = message.text.replace(' ', '').split(',')
        if len(parts) != 2:
            raise ValueError("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç")

        height = int(parts[0])
        weight = float(parts[1])

        if height < 100 or height > 250:
            raise ValueError("–ù–µ–≤–µ—Ä–Ω—ã–π —Ä–æ—Å—Ç")
        if weight < 30 or weight > 300:
            raise ValueError("–ù–µ–≤–µ—Ä–Ω—ã–π –≤–µ—Å")

        await update_user_onboarding(
            pool,
            message.from_user.id,
            height_cm=height,
            weight_kg=weight
        )

        await message.answer(
            f"‚úÖ **–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!**\n\n"
            f"üìè –†–æ—Å—Ç: {height} —Å–º\n"
            f"‚öñÔ∏è –í–µ—Å: {weight} –∫–≥",
            reply_markup=main_patient_kb
        )
        await state.clear()

    except ValueError:
        await message.answer(
            "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: —Ä–æ—Å—Ç,–≤–µ—Å\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä: 170,85.5"
        )

async def update_phase(message: Message, state: FSMContext, db_pool):
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–∑—ã –ø–∏—Ç–∞–Ω–∏—è"""
    global pool
    if pool is None:
        pool = db_pool

    phases = {
        "1": "–∂–∏–¥–∫–∞—è",
        "2": "–ø—é—Ä–µ",
        "3": "–º—è–≥–∫–∞—è",
        "4": "–æ–±—ã—á–Ω–∞—è"
    }

    phase_num = message.text.strip()
    if phase_num in phases:
        phase = phases[phase_num]
        await update_user_onboarding(pool, message.from_user.id, current_phase=phase)

        await message.answer(
            f"‚úÖ **–§–∞–∑–∞ –ø–∏—Ç–∞–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞!**\n\n"
            f"üçΩÔ∏è –¢–µ–∫—É—â–∞—è —Ñ–∞–∑–∞: {phase}",
            reply_markup=main_patient_kb
        )
        await state.clear()
    else:
        await message.answer("‚ùå –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –æ—Ç 1 –¥–æ 4")

async def update_restrictions(message: Message, state: FSMContext, db_pool):
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π"""
    global pool
    if pool is None:
        pool = db_pool

    restrictions = message.text if message.text.lower() != '–Ω–µ—Ç' else None
    await update_user_onboarding(pool, message.from_user.id, dietary_restrictions=restrictions)

    restrictions_text = restrictions if restrictions else "–æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"
    await message.answer(
        f"‚úÖ **–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω—ã!**\n\n"
        f"üö´ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è: {restrictions_text}",
        reply_markup=main_patient_kb
    )
    await state.clear()
