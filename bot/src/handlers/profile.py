# bot/src/handlers/profile.py
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from ..db import get_user_profile, update_user_onboarding
from ..keyboards import main_patient_kb

class ProfileStates(StatesGroup):
    choosing_field = State()
    editing_height_weight = State()
    editing_phase = State()
    editing_restrictions = State()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è
profile_kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üìä –ú–æ–∏ –¥–∞–Ω–Ω—ã–µ"), KeyboardButton(text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å")],
        [KeyboardButton(text="üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"), KeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]
    ], resize_keyboard=True
)

async def show_profile(message: Message, pool):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    profile = await get_user_profile(pool, message.from_user.id)

    if not profile:
        await message.answer("‚ùå –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return

    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –æ–ø–µ—Ä–∞—Ü–∏–∏
    surgery_date = profile.get('surgery_date')
    surgery_str = surgery_date.strftime('%d.%m.%Y') if surgery_date else '–ù–µ —É–∫–∞–∑–∞–Ω–∞'

    # –°—Ç–∞—Ç—É—Å –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏ –ø—Ä–æ—Ñ–∏–ª—è
    completed_fields = 0
    total_fields = 6

    fields_status = {
        'full_name': profile.get('full_name'),
        'surgery_date': profile.get('surgery_date'),
        'height_cm': profile.get('height_cm'),
        'weight_kg': profile.get('weight_kg'),
        'current_phase': profile.get('current_phase'),
        'doctor_code': profile.get('doctor_code')
    }

    for field, value in fields_status.items():
        if value:
            completed_fields += 1

    completeness = int((completed_fields / total_fields) * 100)

    profile_text = f"""
üë§ **–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å** ({completeness}% –∑–∞–ø–æ–ª–Ω–µ–Ω)

üìù **–õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:**
‚Ä¢ –ò–º—è: {profile.get('full_name', '‚ùå –ù–µ —É–∫–∞–∑–∞–Ω–æ')}
‚Ä¢ –î–∞—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏: {surgery_str}
‚Ä¢ –ö–æ–¥ –≤—Ä–∞—á–∞: {profile.get('doctor_code', '‚ùå –ù–µ —É–∫–∞–∑–∞–Ω')}

üìè **–§–∏–∑–∏—á–µ—Å–∫–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:**
‚Ä¢ –†–æ—Å—Ç: {profile.get('height_cm', '‚ùå –ù–µ —É–∫–∞–∑–∞–Ω')} {'—Å–º' if profile.get('height_cm') else ''}
‚Ä¢ –í–µ—Å: {profile.get('weight_kg', '‚ùå –ù–µ —É–∫–∞–∑–∞–Ω')} {'–∫–≥' if profile.get('weight_kg') else ''}

üçΩÔ∏è **–ü–∏—Ç–∞–Ω–∏–µ:**
‚Ä¢ –¢–µ–∫—É—â–∞—è —Ñ–∞–∑–∞: {profile.get('current_phase', '‚ùå –ù–µ —É–∫–∞–∑–∞–Ω–∞')}
‚Ä¢ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è: {profile.get('dietary_restrictions', '–ù–µ —É–∫–∞–∑–∞–Ω—ã')}

üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**
‚Ä¢ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {profile.get('created_at').strftime('%d.%m.%Y')}
‚Ä¢ –û–Ω–±–æ—Ä–¥–∏–Ω–≥: {'‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω' if profile.get('onboarding_completed') else '‚è≥ –í –ø—Ä–æ—Ü–µ—Å—Å–µ'}
"""

    await message.answer(profile_text, reply_markup=profile_kb)

async def start_profile_editing(message: Message, state: FSMContext):
    """–ù–∞—á–∞—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è"""
    await message.answer(
        "‚úèÔ∏è **–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è**\n\n"
        "–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?\n\n"
        "1Ô∏è‚É£ –†–æ—Å—Ç –∏ –≤–µ—Å\n"
        "2Ô∏è‚É£ –¢–µ–∫—É—â–∞—è —Ñ–∞–∑–∞ –ø–∏—Ç–∞–Ω–∏—è\n"
        "3Ô∏è‚É£ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –≤ –ø–∏—Ç–∞–Ω–∏–∏\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-3) –∏–ª–∏ '–æ—Ç–º–µ–Ω–∞':"
    )
    await state.set_state(ProfileStates.choosing_field)

async def process_field_choice(message: Message, state: FSMContext, pool):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø–æ–ª—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    choice = message.text.strip()

    if choice.lower() in ['–æ—Ç–º–µ–Ω–∞', '–Ω–∞–∑–∞–¥']:
        await message.answer("‚ùå –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ", reply_markup=profile_kb)
        await state.clear()
        return

    if choice == "1":
        await message.answer(
            "üìè **–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–æ—Å—Ç–∞ –∏ –≤–µ—Å–∞**\n\n"
            "–í–≤–µ–¥–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: —Ä–æ—Å—Ç,–≤–µ—Å\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä: 170,85.5"
        )
        await state.set_state(ProfileStates.editing_height_weight)

    elif choice == "2":
        await message.answer(
            "üçΩÔ∏è **–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ñ–∞–∑—ã –ø–∏—Ç–∞–Ω–∏—è**\n\n"
            "–ù–∞ –∫–∞–∫–æ–π —Ñ–∞–∑–µ –≤—ã —Å–µ–π—á–∞—Å?\n\n"
            "1Ô∏è‚É£ –ñ–∏–¥–∫–∞—è (–ø–µ—Ä–≤—ã–µ 1-2 –Ω–µ–¥–µ–ª–∏)\n"
            "2Ô∏è‚É£ –ü—é—Ä–µ (2-4 –Ω–µ–¥–µ–ª–∏)\n"
            "3Ô∏è‚É£ –ú—è–≥–∫–∞—è (4-8 –Ω–µ–¥–µ–ª—å)\n"
            "4Ô∏è‚É£ –û–±—ã—á–Ω–∞—è (–ø–æ—Å–ª–µ 8 –Ω–µ–¥–µ–ª—å)\n\n"
            "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-4):"
        )
        await state.set_state(ProfileStates.editing_phase)

    elif choice == "3":
        await message.answer(
            "üö´ **–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –≤ –ø–∏—Ç–∞–Ω–∏–∏**\n\n"
            "–£–∫–∞–∂–∏—Ç–µ –≤–∞—à–∏ –ø–∏—â–µ–≤—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∏–ª–∏ –∞–ª–ª–µ—Ä–≥–∏–∏.\n"
            "–ï—Å–ª–∏ –Ω–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π, –Ω–∞–ø–∏—à–∏—Ç–µ '–Ω–µ—Ç':"
        )
        await state.set_state(ProfileStates.editing_restrictions)

    else:
        await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –æ—Ç 1 –¥–æ 3 –∏–ª–∏ '–æ—Ç–º–µ–Ω–∞'")

async def update_height_weight(message: Message, state: FSMContext, pool):
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–æ—Å—Ç–∞ –∏ –≤–µ—Å–∞"""
    try:
        parts = message.text.replace(' ', '').split(',')
        if len(parts) != 2:
            raise ValueError("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç")

        height = int(parts[0])
        weight = float(parts[1])

        if height < 100 or height > 250:
            raise ValueError("–ù–µ–≤–µ—Ä–Ω—ã–π —Ä–æ—Å—Ç")
        if weight < 30 or weight > 300:
            raise ValueError("–ù–µ–≤–µ—Ä–Ω—ã–π –≤–µ—Å")

        await update_user_onboarding(
            pool,
            message.from_user.id,
            height_cm=height,
            weight_kg=weight
        )

        await message.answer(
            f"‚úÖ **–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!**\n\n"
            f"üìè –†–æ—Å—Ç: {height} —Å–º\n"
            f"‚öñÔ∏è –í–µ—Å: {weight} –∫–≥",
            reply_markup=profile_kb
        )
        await state.clear()

    except ValueError:
        await message.answer(
            "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: —Ä–æ—Å—Ç,–≤–µ—Å\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä: 170,85.5"
        )

async def update_phase(message: Message, state: FSMContext, pool):
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–∑—ã –ø–∏—Ç–∞–Ω–∏—è"""
    phases = {
        "1": "–∂–∏–¥–∫–∞—è",
        "2": "–ø—é—Ä–µ",
        "3": "–º—è–≥–∫–∞—è",
        "4": "–æ–±—ã—á–Ω–∞—è"
    }

    phase_num = message.text.strip()
    if phase_num in phases:
        phase = phases[phase_num]
        await update_user_onboarding(pool, message.from_user.id, current_phase=phase)

        await message.answer(
            f"‚úÖ **–§–∞–∑–∞ –ø–∏—Ç–∞–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞!**\n\n"
            f"üçΩÔ∏è –¢–µ–∫—É—â–∞—è —Ñ–∞–∑–∞: {phase}",
            reply_markup=profile_kb
        )
        await state.clear()
    else:
        await message.answer("‚ùå –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –æ—Ç 1 –¥–æ 4")

async def update_restrictions(message: Message, state: FSMContext, pool):
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π"""
    restrictions = message.text if message.text.lower() != '–Ω–µ—Ç' else None
    await update_user_onboarding(pool, message.from_user.id, dietary_restrictions=restrictions)

    restrictions_text = restrictions if restrictions else "–æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"
    await message.answer(
        f"‚úÖ **–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω—ã!**\n\n"
        f"üö´ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è: {restrictions_text}",
        reply_markup=profile_kb
    )
    await state.clear()

async def back_to_main_menu(message: Message):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    await message.answer(
        "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        reply_markup=main_patient_kb
    )