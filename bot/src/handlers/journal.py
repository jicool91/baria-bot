# bot/src/handlers/journal.py
import logging
from datetime import datetime
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from ..red_flags import RedFlagDetector
from ..db import get_user_profile, save_red_flag, save_journal_entry

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è pool (–±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤ main.py)
pool = None

async def start_journal_entry(message: Message, state: FSMContext):
    """–ù–∞—á–∞—Ç—å –≤–≤–æ–¥ –∑–∞–ø–∏—Å–∏ –≤ –∂—É—Ä–Ω–∞–ª"""
    await message.answer(
        "üìù **–ñ—É—Ä–Ω–∞–ª —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏—è**\n\n"
        "–í–µ–¥–µ–Ω–∏–µ –¥–Ω–µ–≤–Ω–∏–∫–∞ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –∏ –≤—Ä–∞—á—É –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –¥–∏–Ω–∞–º–∏–∫—É –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è.\n\n"
        "üìä **–§–æ—Ä–º–∞—Ç –∑–∞–ø–∏—Å–∏:**\n"
        "`–≤–µ—Å,–Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ,—Å–∏–º–ø—Ç–æ–º—ã`\n\n"
        "üìã **–ü—Ä–∏–º–µ—Ä—ã:**\n"
        "‚Ä¢ `78.5,4,–ª–µ–≥–∫–∞—è —Ç–æ—à–Ω–æ—Ç–∞ —É—Ç—Ä–æ–º`\n"
        "‚Ä¢ `75,—Ö–æ—Ä–æ—à–æ,–≤—Å–µ –≤ –ø–æ—Ä—è–¥–∫–µ`\n"
        "‚Ä¢ `80.2,–ø–ª–æ—Ö–æ–µ,–≥–æ–ª–æ–≤–æ–∫—Ä—É–∂–µ–Ω–∏–µ`\n\n"
        "üìà **–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ:**\n"
        "–ß–∏—Å–ª–æ –æ—Ç 1 –¥–æ 5 –∏–ª–∏ —Å–ª–æ–≤–∞–º–∏:\n"
        "1 (–æ—á–µ–Ω—å –ø–ª–æ—Ö–æ) ‚Üí 2 (–ø–ª–æ—Ö–æ) ‚Üí 3 (–Ω–æ—Ä–º–∞–ª—å–Ω–æ) ‚Üí 4 (—Ö–æ—Ä–æ—à–æ) ‚Üí 5 (–æ—Ç–ª–∏—á–Ω–æ)\n\n"
        "üí° **–°–æ–≤–µ—Ç:** –°–∏–º–ø—Ç–æ–º—ã –º–æ–∂–Ω–æ –Ω–µ —É–∫–∞–∑—ã–≤–∞—Ç—å\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ:"
    )
    from ..states import JournalStates
    await state.set_state(JournalStates.waiting_journal_data)

async def handle_journal_entry(message: Message, state: FSMContext, db_pool):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ –∂—É—Ä–Ω–∞–ª–µ"""
    global pool
    if pool is None:
        pool = db_pool

    try:
        # –ü–∞—Ä—Å–∏–º –¥–∞–Ω–Ω—ã–µ
        parts = [part.strip() for part in message.text.split(',')]
        if len(parts) < 2:
            raise ValueError("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö")

        weight = float(parts[0])
        
        # –ü—ã—Ç–∞–µ–º—Å—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –≤ —á–∏—Å–ª–æ
        mood_text = parts[1].lower()
        if mood_text.isdigit():
            mood = int(mood_text)
        else:
            # –ü—ã—Ç–∞–µ–º—Å—è —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
            mood_map = {
                '–æ—á–µ–Ω—å –ø–ª–æ—Ö–æ': 1, '–æ—á–µ–Ω—å –ø–ª–æ—Ö–æ–µ': 1, '—É–∂–∞—Å–Ω–æ': 1, '–ø–ª–æ—Ö–æ': 2, '–ø–ª–æ—Ö–æ–µ': 2,
                '–Ω–æ—Ä–º–∞–ª—å–Ω–æ': 3, '—Å—Ä–µ–¥–Ω–µ': 3, '–Ω–µ–ø–ª–æ—Ö–æ': 3, '—Ö–æ—Ä–æ—à–æ': 4, '—Ö–æ—Ä–æ—à–µ–µ': 4,
                '–æ—Ç–ª–∏—á–Ω–æ': 5, '–æ—Ç–ª–∏—á–Ω–æ–µ': 5, '–ø—Ä–µ–∫—Ä–∞—Å–Ω–æ': 5, '–∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ': 5
            }
            mood = mood_map.get(mood_text, None)
            if mood is None:
                raise ValueError(f"–ù–µ –º–æ–≥—É —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ '{parts[1]}'. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 5 –∏–ª–∏ —Å–ª–æ–≤–∞: –ø–ª–æ—Ö–æ, –Ω–æ—Ä–º–∞–ª—å–Ω–æ, —Ö–æ—Ä–æ—à–æ, –æ—Ç–ª–∏—á–Ω–æ")
        
        symptoms = parts[2] if len(parts) > 2 else ""

        # –í–∞–ª–∏–¥–∞—Ü–∏—è
        if not (1 <= mood <= 5):
            raise ValueError("–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 1 –¥–æ 5")

        if weight < 30 or weight > 300:
            raise ValueError("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤–µ—Å–∞")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–º–ø—Ç–æ–º—ã –Ω–∞ red-flags
        if symptoms:
            is_critical, detected_flags, severity = RedFlagDetector.check_symptoms(symptoms)

            if is_critical:
                user = await get_user_profile(pool, message.from_user.id)
                if user:
                    await save_red_flag(pool, user['id'], symptoms, severity)

                warning = RedFlagDetector.format_warning(detected_flags)
                await message.answer(warning)
                await state.clear()
                return

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–ø–∏—Å—å
        entry = await save_journal_entry(pool, message.from_user.id, weight, mood, symptoms)

        if entry:
            # –≠–º–æ–¥–∑–∏ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
            mood_emoji = ["üò∞", "üòü", "üòê", "üòä", "ü§©"][mood - 1]
            
            await message.answer(
                f"‚úÖ **–ó–∞–ø–∏—Å—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!**\n\n"
                f"üìÖ **–î–∞—Ç–∞:** {entry['entry_date'].strftime('%d.%m.%Y')}\n"
                f"‚öñÔ∏è **–í–µ—Å:** {weight} –∫–≥\n"
                f"üòä **–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ:** {mood}/5 {mood_emoji}\n"
                f"ü©∫ **–°–∏–º–ø—Ç–æ–º—ã:** {symptoms if symptoms else '–ù–µ —É–∫–∞–∑–∞–Ω—ã'}\n\n"
                f"üìä –î–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥–∞–Ω—ã –≤–∞—à–µ–º—É –≤—Ä–∞—á—É –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞.\n"
                f"üìù –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤–µ—Å—Ç–∏ –¥–Ω–µ–≤–Ω–∏–∫ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –¥–ª—è –ª—É—á—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤!"
            )
        else:
            await message.answer("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

    except ValueError as e:
        error_msg = str(e)
        if "could not convert" in error_msg or "invalid literal" in error_msg:
            await message.answer(
                "‚ùå **–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –¥–∞–Ω–Ω—ã—Ö**\n\n"
                "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç: `–≤–µ—Å,–Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ,—Å–∏–º–ø—Ç–æ–º—ã`\n\n"
                "üìã **–ü—Ä–∏–º–µ—Ä—ã:**\n"
                "‚Ä¢ `75.2,4,–≤—Å–µ —Ö–æ—Ä–æ—à–æ`\n"
                "‚Ä¢ `78,—Ö–æ—Ä–æ—à–æ,–Ω–µ–±–æ–ª—å—à–∞—è —Ç–æ—à–Ω–æ—Ç–∞`\n"
                "‚Ä¢ `76.5,–æ—Ç–ª–∏—á–Ω–æ,–æ—Ç–ª–∏—á–Ω–æ–µ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ`\n"
                "‚Ä¢ `80,–ø–ª–æ—Ö–æ–µ` (–±–µ–∑ —Å–∏–º–ø—Ç–æ–º–æ–≤)\n\n"
                "**–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ:** —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 5 –∏–ª–∏ —Å–ª–æ–≤–∞–º–∏ (–ø–ª–æ—Ö–æ, —Ö–æ—Ä–æ—à–æ, –æ—Ç–ª–∏—á–Ω–æ)\n"
                "**–í–µ—Å:** –≤ –∫–∏–ª–æ–≥—Ä–∞–º–º–∞—Ö (–º–æ–∂–Ω–æ —Å –¥–µ—Å—è—Ç—ã–º–∏)"
            )
        else:
            await message.answer(f"‚ùå {error_msg}")

    except Exception as e:
        logging.error(f"Journal entry error: {e}")
        await message.answer(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏.\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É."
        )

    await state.clear()
